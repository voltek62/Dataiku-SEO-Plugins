// This file is the descriptor for the Custom code recipe MAJESTIC_compute_majestic_out_postgres
{
    // Meta data for display purposes
    "meta" : {
        "label" : "Plugin to create a dataset from Majestic API",
        "author" : "Vincent Terrasi",
        "tags" : ["seo", "majestic"]
    },

    "kind" : "R",
    
    "selectableFromDataset" : true,    

    // Inputs and outputs are defined by roles. In the recipe's I/O tab, the user can associate one
    // or more dataset to each input and output role.

    // The "arity" field indicates whether the user can associate several datasets to the role ('NARY')
    // or at most one ('UNARY'). The "required" field indicates whether the user is allowed to
    // associate no dataset with the role.

    "inputRoles" : [
        {
            "name": "input_A_role",
            "label": "input A displayed name",
            "description": "what input A means",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],

    "outputRoles" : [
        {
            "name": "main_output",
            "label": "main output displayed name",
            "description": "what main output means",
            "arity": "UNARY",
            "required": false,
            "acceptsDataset": true
        }
    ],

    // The field "params" holds a list of all the params
    // for wich the user will be prompted for values in the Settings tab of the recipe.

    // The available parameter types are:
    // STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, COLUMN, COLUMNS, TEXTAREA

    "params": [
        {
            "name": "keyAPI",
            "label" : "Majestic Key API",
            "type": "STRING",
            "description":"",
            "mandatory" : true                
        },
        // A 'COLUMN' parameter is a string, whose value is a column name from an input schema.
        // To specify the input schema whose column names are used, use the "columnRole" field like below.
        // The column names will come from the schema of the first dataset associated to that role.
        {
            "name": "urlColumn",
            "type": "COLUMN",
            "columnRole":"input_A_role"
        }

        // The 'COLUMNS' type works in the same way, except that it is a list of strings.
    ]

}
